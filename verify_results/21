> Task :common:compileJava UP-TO-DATE
> Task :common:processResources NO-SOURCE
> Task :common:classes UP-TO-DATE
> Task :common:jar UP-TO-DATE
> Task :spes:compileJava UP-TO-DATE
> Task :spes:processResources NO-SOURCE
> Task :spes:classes UP-TO-DATE
> Task :spes:jar UP-TO-DATE
> Task :sql:antlrMysql
> Task :sql:copyMysql NO-SOURCE
> Task :sql:antlrPg
> Task :sql:copyPg NO-SOURCE
> Task :sql:compileJava UP-TO-DATE
> Task :sql:processResources UP-TO-DATE
> Task :sql:classes UP-TO-DATE
> Task :sql:jar UP-TO-DATE
> Task :stmt:compileJava UP-TO-DATE
> Task :stmt:processResources UP-TO-DATE
> Task :stmt:classes UP-TO-DATE
> Task :stmt:jar UP-TO-DATE
> Task :superopt:compileJava UP-TO-DATE
> Task :superopt:processResources UP-TO-DATE
> Task :superopt:classes UP-TO-DATE

> Task :superopt:run
1. Rule String
  LeftJoin<a0 k2>(InnerJoin<k0 k1>(Input<t0>,Input<t1>),Input<t2>)|LeftJoin<a1 k5>(InnerJoin<k3 k4>(Input<t3>,Input<t4>),Input<t5>)|AttrsEq(a0,k0);AttrsSub(a0,t0);AttrsSub(k0,t0);AttrsSub(k1,t1);AttrsSub(k2,t2);TableEq(t3,t0);TableEq(t4,t1);TableEq(t5,t2);AttrsEq(k3,k0);AttrsEq(k4,k1);AttrsEq(a1,k1);AttrsEq(k5,k2)

2. Example Query
  SELECT * FROM `r0` AS `t0` INNER JOIN `r1` AS `t1` ON `t0`.`c0` = `t1`.`c1` LEFT JOIN `r2` AS `t2` ON `t0`.`c0` = `t2`.`c2`
  SELECT * FROM `r0` AS `t0` INNER JOIN `r1` AS `t1` ON `t0`.`c0` = `t1`.`c1` LEFT JOIN `r2` AS `t2` ON `t1`.`c1` = `t2`.`c2`

3. U-Expression
  [[q0]](concat(x0,x1,x2)) := t0(x0) * [k0(x0) = k1(x1)] * not([IsNull(k1(x1))]) * t1(x1) * (t2(x2) * [k0(x0) = k2(x2)] * not([IsNull(k2(x2))]) + [IsNull(x2)] * not(∑{x3}(t2(x3) * [k0(x0) = k2(x3)] * not([IsNull(k2(x3))]))))
  [[q1]](concat(x0,x1,x2)) := t0(x0) * [k0(x0) = k1(x1)] * not([IsNull(k1(x1))]) * t1(x1) * (t2(x2) * [k1(x1) = k2(x2)] * not([IsNull(k2(x2))]) + [IsNull(x2)] * not(∑{x4}(t2(x4) * [k1(x1) = k2(x4)] * not([IsNull(k2(x4))]))))

4. First-Order Formulas (Z3 Script)
==== Begin of Snippet-1 ====
(declare-sort Tuple 0)
(declare-fun t0 (Tuple) Int)
(declare-fun t1 (Tuple) Int)
(declare-fun t2 (Tuple) Int)
(declare-fun Null () Tuple)
(declare-fun k0 (Int Tuple) Tuple)
(declare-fun k1 (Int Tuple) Tuple)
(declare-fun k2 (Int Tuple) Tuple)
(declare-fun x0 () Tuple)
(declare-fun x1 () Tuple)
(declare-fun x2 () Tuple)
(assert (forall ((x Tuple)) (>= (t0 x) 0)))
(assert (forall ((x Tuple)) (>= (t1 x) 0)))
(assert (forall ((x Tuple)) (>= (t2 x) 0)))
(assert (forall ((x Tuple) (s Int)) (=> (= x Null) (= (k0 s x) Null))))
(assert (forall ((x Tuple) (s Int)) (=> (= x Null) (= (k1 s x) Null))))
(assert (forall ((x Tuple) (s Int)) (=> (= x Null) (= (k2 s x) Null))))
(assert (= x0 x0))
(assert (= x1 x1))
(assert (= x2 x2))
(assert (let ((a!1 (and (= (k0 1 x0) (k1 2 x1)) (not (= (k1 2 x1) Null)))))
  (not (= (ite a!1
               (* (t0 x0)
                  (t1 x1)
                  (+ (ite (and (= (k0 1 x0) (k2 5 x2)) (not (= (k2 5 x2) Null)))
                          (t2 x2)
                          0)
                     (ite (and (= x2 Null)
                               (not (exists ((x3 Tuple))
                                      (and (> (t2 x3) 0)
                                           (= (k0 1 x0) (k2 5 x3))
                                           (not (= (k2 5 x3) Null))))))
                          1
                          0)))
               0)
          (ite a!1
               (* (t0 x0)
                  (t1 x1)
                  (+ (ite (and (= (k1 2 x1) (k2 5 x2)) (not (= (k2 5 x2) Null)))
                          (t2 x2)
                          0)
                     (ite (and (= x2 Null)
                               (not (exists ((x4 Tuple))
                                      (and (> (t2 x4) 0)
                                           (= (k1 2 x1) (k2 5 x4))
                                           (not (= (k2 5 x4) Null))))))
                          1
                          0)))
               0)))))

(check-sat)
==== End of Snippet-1 ====
==> Result: UNKNOWN

Rule-21: UNKNOWN

Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.

You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.

See https://docs.gradle.org/7.3.3/userguide/command_line_interface.html#sec:command_line_warnings

BUILD SUCCESSFUL in 4s
15 actionable tasks: 3 executed, 12 up-to-date
